/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Custom layer definitions
#define LT_0 0
#define LT_1 1
#define LT_2 2
#define LT_3 3
#define LT_4 4
#define LT_5 5
#define LT_6 6
#define LT_7 7


/ {

// Tap Dance
        behaviors {
            
            // double-tap LSHIFT to turn on CAPS WORD
            tdcaps: td_caps_word {
                compatible = "zmk,behavior-tap-dance";
                label = "CAPDANCE";
                #binding-cells = <0>;
                tapping-term-ms = <100>;
                bindings = <&kp LSHFT>, <&caps_word>;
            };

            // Test 1
            td10: TAP_DANCE_1 {
                compatible = "zmk,behavior-tap-dance";
                label = "TAP_DANCE_1";
                #binding-cells = <0>;
                tapping-term-ms = <115>;
                bindings = <&kp >, <&kp >;
            };

            // Test 2
            td11: TAP_DANCE_2 {
                compatible = "zmk,behavior-tap-dance";
                label = "TAP_DANCE_2";
                #binding-cells = <0>;
                tapping-term-ms = <115>;
                bindings = <&kp >, <&kp >;
            };

            // Test 3
            td12: TAP_DANCE_3 {
                compatible = "zmk,behavior-tap-dance";
                label = "TAP_DANCE_3";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&mt LCTRL BSPC >;
            };
        };

        rpi: require_prior_idle {
    compatible = "zmk,behavior-hold-tap";

    // TEST Hold Tap
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
    bindings = <&kp>, <&kp>;
};

        combos {
            compatible = "zmk,combos";
            
            // OP+BACKSPACE = CTRL+BKSP
            opbksp_ctrlbksp {
                timeout-ms = <50>;
                key-positions = <9 10 11>;
                bindings = <&kp LC(BSPC)>;
            };
            // P+BACKSPACE = DEL
            pbksp_del {
                timeout-ms = <50>;
                key-positions = <10 11>;
                bindings = <&kp DEL>;
            };
            
        };

        conditional_layers {
            compatible = "zmk,conditional-layers";

            // if activating 1 and 3 layers together, activate 4 layer instead
            tri_layer {
                if-layers = <1 3>;
                then-layer = <4>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                LT_0 {
                        bindings = <
   &kp TAB           &kp Q       &kp W      &kp E      &kp R      &kp T                      &kp Y      &kp U       &kp I     &kp O            &kp P        &kp TAB
   &mt LCTRL BSPC    &kp A       &kp S      &kp D      &kp F      &kp G                      &kp H      &kp J       &kp K     &kp L            &kp TAB      &kp TAB
   &kp TAB           &kp Z       &kp X      &kp C      &kp V      &kp B                      &kp N      &kp M       &kp TAB   &kp TAB          &kp TAB      &kp TAB
                                            &kp TAB    &kp TAB   &kp SPACE                    &kp SPACE  &kp TAB    &kp TAB
                        >;
                };
                
                LT_1 {     
                              bindings = <
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
                                           &trans       &trans       &trans                  &trans       &trans       &trans
                              >;
                      };

                LT_2 {     
                              bindings = <
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
                                           &trans       &trans       &trans                  &trans       &trans       &trans
                              >;
                      };

                LT_3 {     
                              bindings = <
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
                                           &trans       &trans       &trans                  &trans       &trans       &trans
                              >;
                      };

                LT_4 {     
                              bindings = <
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
                                           &trans       &trans       &trans                  &trans       &trans       &trans
                              >;
                      };

                LT_5 {     
                              bindings = <
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
                                           &trans       &trans       &trans                  &trans       &trans       &trans
                              >;
                      };

                LT_6 {     
                              bindings = <
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
                                           &trans       &trans       &trans                  &trans       &trans       &trans
                              >;
                      };

                LT_7 {     
                              bindings = <
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
    &trans       &trans       &trans       &trans       &trans       &trans                  &trans       &trans       &trans       &trans       &trans       &trans
                                           &trans       &trans       &trans                  &trans       &trans       &trans
                              >;
                      };
        };
};
